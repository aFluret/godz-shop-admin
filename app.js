// === Firebase config ===
const firebaseConfig = {
    apiKey: "AIzaSyC31dbuZYH-lpDsdaAwP38cmPZLVXzlMNY",
    authDomain: "godzillavape.firebaseapp.com",
    projectId: "godzillavape",
    storageBucket: "godzillavape.firebasestorage.app",
    messagingSenderId: "66348051875",
    appId: "1:66348051875:web:40c998cae87f83c557be16",
    measurementId: "G-TNDBXFRZYD"
};

// === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase ===
const app = firebase.initializeApp(firebaseConfig);
const db = firebase.firestore(app);

// === –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ ===
window.addProduct = async function () {
    const name = document.getElementById('name').value.trim();
    const price = parseFloat(document.getElementById('price').value);
    const volume = document.getElementById('volume').value.trim();

    if (!name || !price || !volume) {
        alert("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è");
        return;
    }

    try {
        await db.collection("products").add({
            name,
            price,
            volume
        });

        alert("‚úÖ –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω!");
        document.getElementById('name').value = "";
        document.getElementById('price').value = "";
        document.getElementById('volume').value = "";
        loadProducts(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
    } catch (e) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:", e);
        alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞");
    }
};

// === –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ ===
async function loadProducts() {
    const container = document.getElementById('products-list');
    container.innerHTML = "<p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>";

    try {
        const snapshot = await db.collection("products").get();
        container.innerHTML = "";

        if (snapshot.empty) {
            container.innerHTML = "<p>–¢–æ–≤–∞—Ä–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç</p>";
            return;
        }

        snapshot.forEach(doc => {
            const data = doc.data();
            const div = document.createElement('div');
            div.className = 'product';
            div.innerHTML = `
                <strong>${data.name}</strong><br/>
                üí∞ –¶–µ–Ω–∞: ${data.price} ‚ÇΩ<br/>
                üì¶ –û–±—ä—ë–º: ${data.volume}<br/>
                <button onclick="editProduct('${doc.id}', '${data.name}', ${data.price}, '${data.volume}')">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
                <button onclick="deleteProduct('${doc.id}')">–£–¥–∞–ª–∏—Ç—å</button>
            `;
            container.appendChild(div);
        });
    } catch (e) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:", e);
        container.innerHTML = "<p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö</p>";
    }
}

// === –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ ===
window.deleteProduct = async function (productId) {
    if (!confirm("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä?")) return;

    try {
        await db.collection("products").doc(productId).delete();
        alert("üóëÔ∏è –¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω!");
        loadProducts();
    } catch (e) {
        console.error("‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:", e);
        alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞");
    }
};

// === –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ ===
window.editProduct = function (id, name, price, volume) {
    const newName = prompt("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ", name);
    const newPrice = parseFloat(prompt("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Ü–µ–Ω—É", price));
    const newVolume = prompt("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –æ–±—ä—ë–º", volume);

    if (!newName || isNaN(newPrice) || !newVolume) {
        alert("–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã");
        return;
    }

    db.collection("products").doc(id).update({
        name: newName,
        price: newPrice,
        volume: newVolume
    }).then(() => {
        alert("‚úèÔ∏è –¢–æ–≤–∞—Ä –æ–±–Ω–æ–≤–ª—ë–Ω!");
        loadProducts();
    }).catch(e => {
        console.error("‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:", e);
        alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞");
    });
};

// === –ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ ===
window.onload = () => {
    loadProducts();
};